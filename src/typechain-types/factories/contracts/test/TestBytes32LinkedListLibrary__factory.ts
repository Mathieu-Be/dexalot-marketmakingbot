/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TestBytes32LinkedListLibrary,
  TestBytes32LinkedListLibraryInterface,
} from "../../../contracts/test/TestBytes32LinkedListLibrary";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_node",
        type: "bytes32",
      },
      {
        internalType: "bool",
        name: "_direction",
        type: "bool",
      },
    ],
    name: "getAdjacent",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_node",
        type: "bytes32",
      },
    ],
    name: "getNode",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_node",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_new",
        type: "bytes32",
      },
      {
        internalType: "bool",
        name: "_direction",
        type: "bool",
      },
    ],
    name: "insert",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "listExists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_node",
        type: "bytes32",
      },
    ],
    name: "nodeExists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_direction",
        type: "bool",
      },
    ],
    name: "pop",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_node",
        type: "bytes32",
      },
      {
        internalType: "bool",
        name: "_direction",
        type: "bool",
      },
    ],
    name: "push",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_node",
        type: "bytes32",
      },
    ],
    name: "remove",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "sizeOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610a93806100206000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c806350c946fe1161006657806350c946fe14610135578063607de6a714610167578063875d9c001461018357806395bc2673146101b3578063fc358197146101e357610093565b80630e15dc89146100985780632c64bf58146100b657806330cb14d2146100d45780634fe46e1d14610104575b600080fd5b6100a0610213565b6040516100ad91906107b6565b60405180910390f35b6100be610224565b6040516100cb91906107ec565b60405180910390f35b6100ee60048036038101906100e99190610838565b610235565b6040516100fb919061087e565b60405180910390f35b61011e600480360381019061011991906108c5565b610252565b60405161012c929190610905565b60405180910390f35b61014f600480360381019061014a919061092e565b610276565b60405161015e9392919061095b565b60405180910390f35b610181600480360381019061017c91906108c5565b61029c565b005b61019d60048036038101906101989190610992565b6102b6565b6040516101aa91906107ec565b60405180910390f35b6101cd60048036038101906101c8919061092e565b6102d9565b6040516101da919061087e565b60405180910390f35b6101fd60048036038101906101f8919061092e565b6102f6565b60405161020a91906107ec565b60405180910390f35b600061021f6000610313565b905090565b60006102306000610367565b905090565b600061024b8260006103e990919063ffffffff16565b9050919050565b60008061026b848460006104169092919063ffffffff16565b915091509250929050565b600080600061028f84600061046d90919063ffffffff16565b9250925092509193909250565b6102b2828260006104f79092919063ffffffff16565b5050565b60006102d0848484600061050a909392919063ffffffff16565b90509392505050565b60006102ef82600061058c90919063ffffffff16565b9050919050565b600061030c82600061067a90919063ffffffff16565b9050919050565b60008060006103258460006001610416565b80925081935050505b600080191681146103605761034584826001610416565b8092508193505050828061035890610a14565b93505061032e565b5050919050565b600080826000016000808152602001908152602001600020600080151515158152602001908152602001600020541415806103d157506000801916826000016000808152602001908152602001600020600060011515151581526020019081526020016000205414155b156103df57600190506103e4565b600090505b919050565b60008060006103fa85600086610416565b809250819350505061040c858261058c565b9250505092915050565b600080610423858561067a565b6104335760008091509150610465565b600185600001600086815260200190815260200160002060008515151515815260200190815260200160002054915091505b935093915050565b600080600061047c858561067a565b6104905760008060009250925092506104f0565b60018560000160008681526020019081526020016000206000801515151581526020019081526020016000205486600001600087815260200190815260200160002060006001151515158152602001908152602001600020549250925092505b9250925092565b610504836000848461050a565b50505050565b6000610516858461067a565b1580156105295750610528858561067a565b5b1561057f57600085600001600086815260200190815260200160002060008415151515815260200190815260200160002054905061056986868686610738565b61057586858386610738565b6001915050610584565b600090505b949350505050565b6000808214806105a357506105a1838361067a565b155b156105b15760009050610674565b610613838460000160008581526020019081526020016000206000801515151581526020019081526020016000205485600001600086815260200190815260200160002060006001151515158152602001908152602001600020546001610738565b8260000160008381526020019081526020016000206000801515151581526020019081526020016000206000905582600001600083815260200190815260200160002060006001151515158152602001908152602001600020600090558190505b92915050565b600080836000016000848152602001908152602001600020600080151515158152602001908152602001600020541480156106e3575060008019168360000160008481526020019081526020016000206000600115151515815260200190815260200160002054145b1561072d5781836000016000808152602001908152602001600020600060011515151581526020019081526020016000205414156107245760019050610732565b60009050610732565b600190505b92915050565b828460000160008481526020019081526020016000206000831515151515815260200190815260200160002081905550818460000160008581526020019081526020016000206000831515151581526020019081526020016000208190555050505050565b6000819050919050565b6107b08161079d565b82525050565b60006020820190506107cb60008301846107a7565b92915050565b60008115159050919050565b6107e6816107d1565b82525050565b600060208201905061080160008301846107dd565b92915050565b600080fd5b610815816107d1565b811461082057600080fd5b50565b6000813590506108328161080c565b92915050565b60006020828403121561084e5761084d610807565b5b600061085c84828501610823565b91505092915050565b6000819050919050565b61087881610865565b82525050565b6000602082019050610893600083018461086f565b92915050565b6108a281610865565b81146108ad57600080fd5b50565b6000813590506108bf81610899565b92915050565b600080604083850312156108dc576108db610807565b5b60006108ea858286016108b0565b92505060206108fb85828601610823565b9150509250929050565b600060408201905061091a60008301856107dd565b610927602083018461086f565b9392505050565b60006020828403121561094457610943610807565b5b6000610952848285016108b0565b91505092915050565b600060608201905061097060008301866107dd565b61097d602083018561086f565b61098a604083018461086f565b949350505050565b6000806000606084860312156109ab576109aa610807565b5b60006109b9868287016108b0565b93505060206109ca868287016108b0565b92505060406109db86828701610823565b9150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a1f8261079d565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610a5257610a516109e5565b5b60018201905091905056fea26469706673582212200df7f5cf29ec8ba2d14945db29360199091beaa2b46449453ee69db15fc2ed4564736f6c63430008090033";

type TestBytes32LinkedListLibraryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestBytes32LinkedListLibraryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestBytes32LinkedListLibrary__factory extends ContractFactory {
  constructor(...args: TestBytes32LinkedListLibraryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TestBytes32LinkedListLibrary> {
    return super.deploy(
      overrides || {}
    ) as Promise<TestBytes32LinkedListLibrary>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TestBytes32LinkedListLibrary {
    return super.attach(address) as TestBytes32LinkedListLibrary;
  }
  override connect(signer: Signer): TestBytes32LinkedListLibrary__factory {
    return super.connect(signer) as TestBytes32LinkedListLibrary__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestBytes32LinkedListLibraryInterface {
    return new utils.Interface(_abi) as TestBytes32LinkedListLibraryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestBytes32LinkedListLibrary {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as TestBytes32LinkedListLibrary;
  }
}
