/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BytesLike,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  AirdropV1,
  AirdropV1Interface,
} from "../../../contracts/token/AirdropV1";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_token",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "claimer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "Claimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "_claimed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "canClaim",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "merkleProof",
        type: "bytes32[]",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "claimed",
    outputs: [
      {
        internalType: "uint256",
        name: "claimedBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "claimedMask",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "retrieveFund",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "root",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c06040523480156200001157600080fd5b5060405162001ff338038062001ff3833981810160405281019062000037919062000242565b60008060006101000a81548160ff0219169083151502179055506200007162000065620000bc60201b60201c565b620000c460201b60201c565b600180819055508173ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508060a08181525050505062000289565b600033905090565b60008060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600060016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001bb826200018e565b9050919050565b6000620001cf82620001ae565b9050919050565b620001e181620001c2565b8114620001ed57600080fd5b50565b6000815190506200020181620001d6565b92915050565b6000819050919050565b6200021c8162000207565b81146200022857600080fd5b50565b6000815190506200023c8162000211565b92915050565b600080604083850312156200025c576200025b62000189565b5b60006200026c85828601620001f0565b92505060206200027f858286016200022b565b9150509250929050565b60805160a051611d21620002d26000396000818161063d01526108080152600081816104a9015281816106e3015281816108aa0152818161095a0152610ab30152611d216000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c8063c95c0d891161008c578063ee37811c11610066578063ee37811c146101c9578063f2fde38b146101d3578063f4ddedcf146101ef578063fc0c546a1461021f576100cf565b8063c95c0d891461014a578063dbe7e3bd1461017a578063ebf0c717146101ab576100cf565b80633f4ba83a146100d45780635c975abb146100de578063715018a6146100fc5780638456cb59146101065780638da5cb5b14610110578063ae0b51df1461012e575b600080fd5b6100dc61023d565b005b6100e66102c3565b6040516100f391906110a6565b60405180910390f35b6101046102d9565b005b61010e610361565b005b6101186103e7565b6040516101259190611102565b60405180910390f35b610148600480360381019061014391906111c2565b610410565b005b610164600480360381019061015f9190611236565b610737565b60405161017191906110a6565b60405180910390f35b610194600480360381019061018f9190611236565b610782565b6040516101a2929190611272565b60405180910390f35b6101b3610806565b6040516101c091906112b4565b60405180910390f35b6101d161082a565b005b6101ed60048036038101906101e891906112fb565b6109a1565b005b61020960048036038101906102049190611236565b610a99565b6040516102169190611328565b60405180910390f35b610227610ab1565b60405161023491906113a2565b60405180910390f35b610245610ad5565b73ffffffffffffffffffffffffffffffffffffffff166102636103e7565b73ffffffffffffffffffffffffffffffffffffffff16146102b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102b09061141a565b60405180910390fd5b6102c1610add565b565b60008060009054906101000a900460ff16905090565b6102e1610ad5565b73ffffffffffffffffffffffffffffffffffffffff166102ff6103e7565b73ffffffffffffffffffffffffffffffffffffffff1614610355576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161034c9061141a565b60405180910390fd5b61035f6000610b7e565b565b610369610ad5565b73ffffffffffffffffffffffffffffffffffffffff166103876103e7565b73ffffffffffffffffffffffffffffffffffffffff16146103dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103d49061141a565b60405180910390fd5b6103e5610c43565b565b60008060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6104186102c3565b15610458576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161044f90611486565b60405180910390fd5b6002600154141561049e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610495906114f2565b60405180910390fd5b6002600181905550827f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016105009190611102565b60206040518083038186803b15801561051857600080fd5b505afa15801561052c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105509190611527565b11610590576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610587906115c6565b60405180910390fd5b60008061059c86610782565b9150915080821760026000610100896105b59190611644565b81526020019081526020016000208190555060008633876040516020016105de939291906116de565b604051602081830303815290604052805190602001209050610662858580806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050507f000000000000000000000000000000000000000000000000000000000000000083610ce5565b6106a1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069890611767565b60405180910390fd5b7f987d620f307ff6b94d58743cb7a7509f24071586a77759b77c2d4e29f75a2f9a3387426040516106d493929190611787565b60405180910390a161072733877f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16610cfc9092919063ffffffff16565b5050506001808190555050505050565b600080600260006101008561074c9190611644565b815260200190815260200160002054905060006101008461076d91906117be565b6001901b905060008183161492505050919050565b60008060026000610100856107979190611644565b8152602001908152602001600020549150610100836107b691906117be565b6001901b9050600081831614610801576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107f89061183b565b60405180910390fd5b915091565b7f000000000000000000000000000000000000000000000000000000000000000081565b610832610ad5565b73ffffffffffffffffffffffffffffffffffffffff166108506103e7565b73ffffffffffffffffffffffffffffffffffffffff16146108a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089d9061141a565b60405180910390fd5b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016109019190611102565b60206040518083038186803b15801561091957600080fd5b505afa15801561092d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109519190611527565b905061099e33827f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16610cfc9092919063ffffffff16565b50565b6109a9610ad5565b73ffffffffffffffffffffffffffffffffffffffff166109c76103e7565b73ffffffffffffffffffffffffffffffffffffffff1614610a1d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a149061141a565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610a8d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a84906118cd565b60405180910390fd5b610a9681610b7e565b50565b60026020528060005260406000206000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000081565b600033905090565b610ae56102c3565b610b24576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b1b90611939565b60405180910390fd5b60008060006101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa610b67610ad5565b604051610b749190611102565b60405180910390a1565b60008060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600060016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610c4b6102c3565b15610c8b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c8290611486565b60405180910390fd5b60016000806101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610cce610ad5565b604051610cdb9190611102565b60405180910390a1565b600082610cf28584610d82565b1490509392505050565b610d7d8363a9059cbb60e01b8484604051602401610d1b929190611959565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610df7565b505050565b60008082905060005b8451811015610dec576000858281518110610da957610da8611982565b5b60200260200101519050808311610dcb57610dc48382610ebe565b9250610dd8565b610dd58184610ebe565b92505b508080610de4906119b1565b915050610d8b565b508091505092915050565b6000610e59826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16610ed59092919063ffffffff16565b9050600081511115610eb95780806020019051810190610e799190611a26565b610eb8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610eaf90611ac5565b60405180910390fd5b5b505050565b600082600052816020526040600020905092915050565b6060610ee48484600085610eed565b90509392505050565b606082471015610f32576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f2990611b57565b60405180910390fd5b610f3b85611001565b610f7a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f7190611bc3565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051610fa39190611c5d565b60006040518083038185875af1925050503d8060008114610fe0576040519150601f19603f3d011682016040523d82523d6000602084013e610fe5565b606091505b5091509150610ff5828286611024565b92505050949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6060831561103457829050611084565b6000835111156110475782518084602001fd5b816040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161107b9190611cc9565b60405180910390fd5b9392505050565b60008115159050919050565b6110a08161108b565b82525050565b60006020820190506110bb6000830184611097565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006110ec826110c1565b9050919050565b6110fc816110e1565b82525050565b600060208201905061111760008301846110f3565b92915050565b600080fd5b600080fd5b6000819050919050565b61113a81611127565b811461114557600080fd5b50565b60008135905061115781611131565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126111825761118161115d565b5b8235905067ffffffffffffffff81111561119f5761119e611162565b5b6020830191508360208202830111156111bb576111ba611167565b5b9250929050565b600080600080606085870312156111dc576111db61111d565b5b60006111ea87828801611148565b94505060206111fb87828801611148565b935050604085013567ffffffffffffffff81111561121c5761121b611122565b5b6112288782880161116c565b925092505092959194509250565b60006020828403121561124c5761124b61111d565b5b600061125a84828501611148565b91505092915050565b61126c81611127565b82525050565b60006040820190506112876000830185611263565b6112946020830184611263565b9392505050565b6000819050919050565b6112ae8161129b565b82525050565b60006020820190506112c960008301846112a5565b92915050565b6112d8816110e1565b81146112e357600080fd5b50565b6000813590506112f5816112cf565b92915050565b6000602082840312156113115761131061111d565b5b600061131f848285016112e6565b91505092915050565b600060208201905061133d6000830184611263565b92915050565b6000819050919050565b600061136861136361135e846110c1565b611343565b6110c1565b9050919050565b600061137a8261134d565b9050919050565b600061138c8261136f565b9050919050565b61139c81611381565b82525050565b60006020820190506113b76000830184611393565b92915050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006114046020836113bd565b915061140f826113ce565b602082019050919050565b60006020820190508181036000830152611433816113f7565b9050919050565b7f5061757361626c653a2070617573656400000000000000000000000000000000600082015250565b60006114706010836113bd565b915061147b8261143a565b602082019050919050565b6000602082019050818103600083015261149f81611463565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b60006114dc601f836113bd565b91506114e7826114a6565b602082019050919050565b6000602082019050818103600083015261150b816114cf565b9050919050565b60008151905061152181611131565b92915050565b60006020828403121561153d5761153c61111d565b5b600061154b84828501611512565b91505092915050565b7f436f6e747261637420646f65736e74206861766520656e6f75676820746f6b6560008201527f6e73000000000000000000000000000000000000000000000000000000000000602082015250565b60006115b06022836113bd565b91506115bb82611554565b604082019050919050565b600060208201905081810360008301526115df816115a3565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061164f82611127565b915061165a83611127565b92508261166a576116696115e6565b5b828204905092915050565b6000819050919050565b61169061168b82611127565b611675565b82525050565b60008160601b9050919050565b60006116ae82611696565b9050919050565b60006116c0826116a3565b9050919050565b6116d86116d3826110e1565b6116b5565b82525050565b60006116ea828661167f565b6020820191506116fa82856116c7565b60148201915061170a828461167f565b602082019150819050949350505050565b7f4d65726b6c652050726f6f66206973206e6f742076616c696400000000000000600082015250565b60006117516019836113bd565b915061175c8261171b565b602082019050919050565b6000602082019050818103600083015261178081611744565b9050919050565b600060608201905061179c60008301866110f3565b6117a96020830185611263565b6117b66040830184611263565b949350505050565b60006117c982611127565b91506117d483611127565b9250826117e4576117e36115e6565b5b828206905092915050565b7f546f6b656e73206861766520616c7265616479206265656e20636c61696d6564600082015250565b60006118256020836113bd565b9150611830826117ef565b602082019050919050565b6000602082019050818103600083015261185481611818565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006118b76026836113bd565b91506118c28261185b565b604082019050919050565b600060208201905081810360008301526118e6816118aa565b9050919050565b7f5061757361626c653a206e6f7420706175736564000000000000000000000000600082015250565b60006119236014836113bd565b915061192e826118ed565b602082019050919050565b6000602082019050818103600083015261195281611916565b9050919050565b600060408201905061196e60008301856110f3565b61197b6020830184611263565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006119bc82611127565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156119ef576119ee611615565b5b600182019050919050565b611a038161108b565b8114611a0e57600080fd5b50565b600081519050611a20816119fa565b92915050565b600060208284031215611a3c57611a3b61111d565b5b6000611a4a84828501611a11565b91505092915050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b6000611aaf602a836113bd565b9150611aba82611a53565b604082019050919050565b60006020820190508181036000830152611ade81611aa2565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b6000611b416026836113bd565b9150611b4c82611ae5565b604082019050919050565b60006020820190508181036000830152611b7081611b34565b9050919050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b6000611bad601d836113bd565b9150611bb882611b77565b602082019050919050565b60006020820190508181036000830152611bdc81611ba0565b9050919050565b600081519050919050565b600081905092915050565b60005b83811015611c17578082015181840152602081019050611bfc565b83811115611c26576000848401525b50505050565b6000611c3782611be3565b611c418185611bee565b9350611c51818560208601611bf9565b80840191505092915050565b6000611c698284611c2c565b915081905092915050565b600081519050919050565b6000601f19601f8301169050919050565b6000611c9b82611c74565b611ca581856113bd565b9350611cb5818560208601611bf9565b611cbe81611c7f565b840191505092915050565b60006020820190508181036000830152611ce38184611c90565b90509291505056fea26469706673582212203dd024c51b25a8239334b0c13e5ac9fbaf96f0b071e7a7fcb768f583eaf6f6a964736f6c63430008090033";

type AirdropV1ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AirdropV1ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AirdropV1__factory extends ContractFactory {
  constructor(...args: AirdropV1ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _token: string,
    _root: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<AirdropV1> {
    return super.deploy(_token, _root, overrides || {}) as Promise<AirdropV1>;
  }
  override getDeployTransaction(
    _token: string,
    _root: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_token, _root, overrides || {});
  }
  override attach(address: string): AirdropV1 {
    return super.attach(address) as AirdropV1;
  }
  override connect(signer: Signer): AirdropV1__factory {
    return super.connect(signer) as AirdropV1__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AirdropV1Interface {
    return new utils.Interface(_abi) as AirdropV1Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AirdropV1 {
    return new Contract(address, _abi, signerOrProvider) as AirdropV1;
  }
}
